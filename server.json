{
  "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-16/server.schema.json",
  "name": "io.github.copyleftdev/fabric-atelier",
  "title": "Fabric Atelier",
  "description": "AI-powered content processing with 226 Fabric patterns for writing, analysis, and code generation.",
  "version": "0.1.2",
  "license": "MIT",
  "homepage": "https://github.com/copyleftdev/fabric-atelier",
  "repository": {
    "type": "git",
    "url": "https://github.com/copyleftdev/fabric-atelier.git",
    "source": "github"
  },
  "author": {
    "name": "copyleftdev",
    "url": "https://github.com/copyleftdev"
  },
  "icon": {
    "src": "https://raw.githubusercontent.com/copyleftdev/fabric-atelier/master/docs/media/logo.png",
    "mimeType": "image/png"
  },
  "categories": [
    "content-generation",
    "text-processing",
    "ai-tools",
    "productivity"
  ],
  "tags": [
    "mcp",
    "model-context-protocol",
    "fabric",
    "fabric-patterns",
    "rust",
    "apache-arrow",
    "llm",
    "ai-assistant",
    "claude-desktop",
    "ollama",
    "openai",
    "anthropic",
    "prompt-engineering",
    "content-generation",
    "text-processing",
    "semantic-search",
    "vector-embeddings",
    "docker",
    "writing-assistant",
    "code-generation",
    "security-analysis",
    "threat-analysis",
    "essay-writing",
    "content-analysis",
    "ai-tools",
    "productivity",
    "automation",
    "mcp-server",
    "high-performance",
    "rust-lang"
  ],
  "packages": [
    {
      "registryType": "oci",
      "registryBaseUrl": "https://docker.io",
      "identifier": "copyleftdev/fabric-atelier",
      "version": "0.1.2",
      "transport": {
        "type": "stdio"
      }
    }
  ],
  "capabilities": {
    "tools": {
      "listChanged": false
    }
  },
  "instructions": "Fabric Atelier provides 226 expert-crafted patterns for content processing. Each pattern is a specialized prompt designed for specific tasks like writing essays (fabric_write_essay_pg), analyzing content (fabric_analyze_claims), extracting insights (fabric_extract_insights), security analysis (fabric_analyze_threat_report), and much more. Simply call the appropriate tool with your content to get AI-powered results. All patterns are prefixed with 'fabric_' followed by the pattern name."
}
